= shiny

Shiny extends the ruby core string class with two methods, ansi and html. These two are proxy methods to provide a bunch of color and text formating methods.
Over ansi there are the commen known ansi escape sequences available, bold, blink, underline and the whole colorful format things. The method html serves the same but in the html way, it makes the
standart w3c color names available and also a few other formats like overline, underline, blink etc.

== Installation

  $ gem install shiny

== Usage

Some ansi color examples:

  puts "magenta".ansi.magenta
  puts "bold blue".ansi.bold.blue
  puts "yellow on cyan".ansi.yellow.on_cyan
  puts "bright blue on green".ansi.bright_blue.on_green
  puts "red on bright blue".ansi.red.on_bright_blue

Some other ansi effect examples:

  puts "bold".ansi.bold
  puts "oh! i'm blinking".ansi.blink
  puts "nice and underlined".ansi.underline
  puts "other side, please".ansi.negative

Some html color examples: (the html formats should be used in the browser ;)

  "orange".html.orange
  "bold red".html.bold.red
  "yellow on olive".html.yellow.on_olive
  "blue on teal".html.blue.on_teal
  "fuchsia".html.fuchsia

Some other html effect examples:

  "bold".html.bold
  "oh! i'm blinking".html.blink
  "nice and underlined".html.underline
  "overline".html.overline
  "line-through".html.line_through

== Note on Patches/Pull Requests

* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 Samuel Tonini. See LICENSE for details.
